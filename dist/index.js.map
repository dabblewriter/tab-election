{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["export type OnLeadership = (relinquish: Unsubscribe) => any;\nexport type Unsubscribe = () => void;\nexport type OnReceive = (msg: any) => void;\nexport type OnState<T> = (state: T) => void;\n\ninterface Deferred {\n  resolve: (value: any) => void;\n  reject: (reason?: any) => void;\n  timeout: number;\n}\n\nexport enum To {\n  All = 'all',\n  Others = 'others',\n  Leader = 'leader',\n}\n\nexport interface TabEventMap {\n  leadershipchange: Event;\n  message: MessageEvent;\n  state: MessageEvent;\n}\n\nexport interface Tab {\n  addEventListener<K extends keyof TabEventMap>(type: K, listener: (this: BroadcastChannel, ev: TabEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n  addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n  removeEventListener<K extends keyof TabEventMap>(type: K, listener: (this: BroadcastChannel, ev: TabEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n  removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\n/**\n * A Tab is an interfaces to synchronize state and messages between tabs. It uses BroadcastChannel and the Lock API.\n * This is a simplified version of the original implementation.\n */\nexport class Tab<T = Record<string, any>> extends EventTarget implements Tab {\n  relinquishLeadership = () => {};\n\n  #name: string;\n  #id: string;\n  #callerId: string;\n  #callDeferreds = new Map<number, Deferred>();\n  #queuedCalls = new Map<number, { id: string; name: string; rest: any[] }>();\n  #channel: BroadcastChannel;\n  #isLeader = false;\n  #isLeaderReady = false;\n  #state: T;\n  #callCount = 0;\n  #api: any;\n\n  constructor(name = 'default') {\n    super();\n    this.#name = name;\n    this.#id = createTabId();\n    this.#state = {} as T;\n    this.#createChannel();\n    this.hasLeader().then(hasLeader => {\n      if (hasLeader) this.#postMessage(To.Leader, 'onSendState', this.#id);\n    });\n  }\n\n  get id() {\n    return this.#id;\n  }\n\n  get name() {\n    return this.#name;\n  }\n\n  get isLeader() {\n    return this.#isLeader;\n  }\n\n  async hasLeader() {\n    return navigator.locks.request(`tab-${this.#name}`, { ifAvailable: true }, async lock => lock === null);\n  }\n\n  getCurrentCallerId() {\n    return this.#callerId;\n  }\n\n  getState() {\n    return this.#state;\n  }\n  setState(state: T) {\n    if (!this.isLeader) throw new Error('Only the leader can set state');\n    this.#onState(state);\n    this.#postMessage(To.Others, 'onState', state);\n  }\n\n  async waitForLeadership(onLeadership: OnLeadership): Promise<boolean> {\n    this.relinquishLeadership(); // Cancel any previous leadership requests\n    const abortController = new AbortController();\n    const { signal } = abortController;\n    this.relinquishLeadership = () => abortController.abort('Aborted');\n\n    try {\n      // The signal will cancel the lock request before a lock is attained, the promise.resolve will cancel it after\n      return await navigator.locks.request(`tab-${this.#name}`, { signal }, async lock => {\n        this.#isLeader = true;\n        // Never resolve until relinquishLeadership is called\n        const keepLockPromise = new Promise<boolean>(resolve => (this.relinquishLeadership = () => resolve(true)));\n        this.#api = await onLeadership(this.relinquishLeadership);\n        this.#isLeaderReady = true;\n        this.#queuedCalls.forEach(({ id, name, rest }, callNumber) => this.#onCall(id, callNumber, name, ...rest));\n        this.#queuedCalls.clear();\n        this.dispatchEvent(new Event('leadershipchange'));\n        this.#postMessage(To.Others, 'onLeader', this.#state);\n        return keepLockPromise;\n      }).catch(e => e !== 'Aborted' && Promise.reject(e) || false);\n    } finally {\n      this.#isLeader = false;\n      this.#api = null;\n      this.dispatchEvent(new Event('leadershipchange'));\n    }\n  }\n\n  call<R>(name: string, ...rest: any[]): Promise<R> {\n    const callNumber = ++this.#callCount;\n    return new Promise<R>(async (resolve, reject) => {\n      const timeout = setTimeout(() => {\n        this.#callDeferreds.delete(callNumber);\n        reject(new Error('Call timed out'));\n      }, 30_000);\n      this.#callDeferreds.set(callNumber, { resolve, reject, timeout });\n      if (this.isLeader && this.#isLeaderReady) {\n        this.#onCall(this.#id, callNumber, name, ...rest);\n      } else if (!this.isLeader && (await this.hasLeader())) {\n        this.#postMessage(To.Leader, 'onCall', this.#id, callNumber, name, ...rest);\n      } else {\n        this.#queuedCalls.set(callNumber, { id: this.#id, name, rest });\n      }\n    });\n  }\n\n  send(data: any, to: string | Set<string> = To.Others): void {\n    this.#postMessage(to, 'onSend', data);\n  }\n\n  close(): void {\n    this.relinquishLeadership();\n    this.#isLeader = false;\n    this.#channel.close();\n    this.#channel.onmessage = null;\n  }\n\n  #isToMe(to: string | Set<string>) {\n    if (typeof to === 'string') {\n      return (to === To.Leader && this.#isLeader) || to === this.#id || to === To.All || to === To.Others;\n    }\n    return to.has(this.#id);\n  }\n\n  #createChannel() {\n    this.#channel = new BroadcastChannel(`tab-${this.#name}`);\n    this.#channel.onmessage = e => this.#onMessage(e);\n  }\n\n  #postMessage(to: string | Set<string>, name: string, ...rest: any[]) {\n    // Don't send if there's no one to send to\n    if (!to || to instanceof Set && !to.size) return;\n    const data = { to, name, rest };\n    const toMe = to !== To.Others && this.#isToMe(to);\n    try {\n      this.#channel.postMessage(data);\n      if (toMe) {\n        this.#onMessage(new MessageEvent('message', { data }));\n      }\n    } catch (e) {\n      // If the channel is closed, create a new one and try again\n      if (e.name === 'InvalidStateError') {\n        this.#createChannel();\n        this.#postMessage(to, name, ...rest);\n      }\n    }\n  }\n\n  #onMessage(event: MessageEvent) {\n    const { to, name, rest } = event.data as { to: Set<string>; name: string; rest: any[] };\n    if (!this.#isToMe(to)) return;\n    if (name === 'onCall') this.#onCall.apply(this, rest);\n    else if (name === 'onReturn') this.#onReturn.apply(this, rest);\n    else if (name === 'onState') this.#onState.apply(this, rest);\n    else if (name === 'onSend') this.#onSend.apply(this, rest);\n    else if (name === 'onSendState') this.#onSendState.apply(this, rest);\n    else if (name === 'onLeader') this.#onLeader.apply(this, rest);\n    else console.error('Unknown message', name, rest);\n  }\n\n  async #onCall(id: string, callNumber: number, name: string, ...rest: any[]) {\n    if (!this.isLeader) return;\n    if (!this.#isLeaderReady) {\n      this.#queuedCalls.set(callNumber, { id, name, rest });\n      return;\n    }\n    try {\n      if (typeof this.#api?.[name] !== 'function') throw new Error(`Invalid API method \"${name}\"`);\n      this.#callerId = id;\n      const promise = this.#api[name](...rest);\n      this.#callerId = undefined;\n      const results = await promise;\n      this.#postMessage(id, 'onReturn', callNumber, null, results);\n    } catch (e) {\n      this.#callerId = undefined;\n      this.#postMessage(id, 'onReturn', callNumber, e);\n    }\n  }\n\n  #onReturn(callNumber: number, error: any, results: any) {\n    const deferred = this.#callDeferreds.get(callNumber);\n    if (!deferred) return console.error('No deferred found for call', callNumber);\n    clearTimeout(deferred.timeout);\n    this.#callDeferreds.delete(callNumber);\n    if (error) deferred.reject(error);\n    else deferred.resolve(results);\n  }\n\n  #onState(data: T) {\n    this.#state = data;\n    this.dispatchEvent(new MessageEvent('state', { data }));\n  }\n\n  #onSend(data: any) {\n    this.dispatchEvent(new MessageEvent('message', { data }));\n  }\n\n  #onSendState(id: string) {\n    if (this.isLeader) {\n      this.#postMessage(id, 'onState', this.#state);\n    }\n  }\n\n  #onLeader(state: T) {\n    this.#onState(state);\n    this.#queuedCalls.forEach(({ id, name, rest }, callNumber) =>\n      this.#postMessage(To.Leader, 'onCall', callNumber, name, ...rest)\n    );\n    this.#queuedCalls.clear();\n  }\n}\n\nconst chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\n\nfunction createTabId() {\n  let id = '';\n  let length = 16;\n  while (length--) {\n    id += chars[(Math.random() * chars.length) | 0];\n  }\n  return id;\n}\n"]}